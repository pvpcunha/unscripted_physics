[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Home",
    "section": "",
    "text": "Explorations in physics, modeling, and curiosity \n\nHi, and welcome to my website!\nI have created this space to share ideas, models, and rough explorations that don’t always fit neatly into scientific articles or proposals. Some are just things I was curious about. This is a collection of informal, yet serious, reflections and analyses driven by curiosity, mostly grounded in physics and math, and always shaped by the desire to understand the world a little better.\nAt the heart of it is a love for modeling: using simple principles to break down complex systems from our world into something more manageable, to get a better grasp on how things actually work.\nYou can navigate the website and its contents using the menu above.\nThe content here is not peer-reviewed and does not aim to be final. Some of it explores rough models or back-of-the-envelope estimates, or just rethinks problems just for the joy of it. Think of it as thoughtful sketchbook made public.\nIf something here proves useful in your work, in your teaching or research - or if you have just any comments - feel free to reach out by email (pvcunha@ua.pt). If you end up using or building upon any of this material, I only ask that you give appropriate credit.\nThanks for reading.\nPedro Cunha"
  },
  {
    "objectID": "index.html#unscripted-physics",
    "href": "index.html#unscripted-physics",
    "title": "Home",
    "section": "",
    "text": "Explorations in physics, modeling, and curiosity \n\nHi, and welcome to my website!\nI have created this space to share ideas, models, and rough explorations that don’t always fit neatly into scientific articles or proposals. Some are just things I was curious about. This is a collection of informal, yet serious, reflections and analyses driven by curiosity, mostly grounded in physics and math, and always shaped by the desire to understand the world a little better.\nAt the heart of it is a love for modeling: using simple principles to break down complex systems from our world into something more manageable, to get a better grasp on how things actually work.\nYou can navigate the website and its contents using the menu above.\nThe content here is not peer-reviewed and does not aim to be final. Some of it explores rough models or back-of-the-envelope estimates, or just rethinks problems just for the joy of it. Think of it as thoughtful sketchbook made public.\nIf something here proves useful in your work, in your teaching or research - or if you have just any comments - feel free to reach out by email (pvcunha@ua.pt). If you end up using or building upon any of this material, I only ask that you give appropriate credit.\nThanks for reading.\nPedro Cunha"
  },
  {
    "objectID": "index.html#about-the-author",
    "href": "index.html#about-the-author",
    "title": "Home",
    "section": "About the Author",
    "text": "About the Author\nI am currently a postdoctoral researcher in theoretical physics, working primarily on black holes and gravity at the University of Aveiro. You can check my publications in this link. If you would like to reach out, feel free to email me at pvcunha@ua.pt."
  },
  {
    "objectID": "vpython.html",
    "href": "vpython.html",
    "title": "Physics Simulations using VPython",
    "section": "",
    "text": "First published: August 6th 2025 Author: Pedro Cunha"
  },
  {
    "objectID": "vpython.html#section",
    "href": "vpython.html#section",
    "title": "Physics Simulations using VPython",
    "section": "",
    "text": "In this link you can find a collection of simple numerical simulations I have built using Visual Python (VPython). They run directly in your browser, with no installation required!\nBelow you can find a brief description of some simulations you will find there. These were originally built for teaching, exploration, or just for fun, and I hope others will find them useful or inspiring."
  },
  {
    "objectID": "vpython.html#vibrating-drum-membrane",
    "href": "vpython.html#vibrating-drum-membrane",
    "title": "Physics Simulations using VPython",
    "section": "Vibrating drum membrane",
    "text": "Vibrating drum membrane\n\nOn this webpage you will find an interactive simulation of a two-dimensional elastic membrane - like the surface of a vibrating drum.\nThe model represents the membrane as a grid of mass points connected by elastic springs. Each point interacts only with its immediate neighbors, exerting vertical forces based on the difference in vertical displacement between them. This mimics the behavior of an elastic surface: you can think of it as vertical springs (satisfying Hooke’s law) linking adjacent points on the surface.\nIn the picture above the boundary of the surface is fixed, as it would be in a real drum. Even this simple discrete approximation leads to realistic and visually compelling oscillatory behavior.\nYou can explore a variety of configurations on the main simulation page, including different membrane shapes, oscillation modes, and boundary conditions - such as membranes with free edges."
  },
  {
    "objectID": "vpython.html#ideal-gas",
    "href": "vpython.html#ideal-gas",
    "title": "Physics Simulations using VPython",
    "section": "Ideal gas",
    "text": "Ideal gas\n\nOn this webpage you can also find a simple simulation of a two-dimensional ideal gas confined in a circular container. The gas consists of many small particles (shown in gray), moving freely and bouncing off the green circular wall. The particles do not interact with each other - only with the container.\nEach time a particle hits the wall, it exerts a small force. When many particles collide over time, these tiny forces add up to produce a collective pressure on the wall. In this two-dimensional (2D) setup, the pressure has units of force per unit length (instead of force per area as in 3D), and it can be calculated by tracking the momentum transferred to the boundary during collisions.\nThe speed of the particles is set according to the Equipartition Theorem, which is a fundamental result from statistical physics. In a nutshell, this theorem tells us that, in thermal equilibrium, each degree of freedom contributes an average energy of \\(kT/2\\), where \\(k\\) is the Boltzmann constant and \\(T\\) is the temperature of the gas.\nIn this case, the particles move only in two dimensions and do not rotate, and so they have two degrees of freedom (motion in \\(x\\) and \\(y\\) directions). That means each particle carries an average kinetic energy of \\(kT\\).\nFrom this, we can find the average particle velocity \\(v\\): \\[ v=\\sqrt{\\frac{2kT}{m}}\\,,\\] where \\(m\\) is the mass of each particle. This equation links the microscopic motion of particles to the macroscopic concept of temperature. In the simulation we can numerically verify that the gas obeys the expected ideal gas law in two-dimensions: \\[PA = nkT\\,,\\] where \\(A\\) is the area of the circular container (the 2D analog of volume), and \\(n\\) is the number of particles in the gas."
  },
  {
    "objectID": "vpython.html#wave-diffraction-through-a-slit",
    "href": "vpython.html#wave-diffraction-through-a-slit",
    "title": "Physics Simulations using VPython",
    "section": "Wave diffraction through a slit",
    "text": "Wave diffraction through a slit\n\nOn this webpage you will find a simple simulation of wave diffraction, which is the bending and spreading of the wavefront as they pass through an opening. In this case, we model plane waves (like ripples on a lake surface) encountering a wall with a single narrow slit.\nFor a bit of context, when a wave passes through a small aperture that is comparable in size to its wavelength, its wavefront no longer travels strictly in a straight line: instead, it spreads out in a circular pattern on the other side of the opening.\nIn the simulation, we consider a 2D array of point particles (shown in yellow), which oscillate vertically. Each particle interacts elastically with its immediate neighbors, with the force it feels being proportional to the difference in vertical displacement between adjacent points. This simple setup mimics how disturbances propagate across a surface.\nWe consider a plane wave traveling toward a white wall that blocks further propagation, except at a single slit in the center. The wave passes through this opening, producing circular wavefronts that radiate outward: a clear manifestation of diffraction in action.\nTo help with the visualization, vertical displacements are coded via color: particles above the rest position are shown in red, and those below are blue. This makes the alternating wave crests and troughs easy to follow, and beautifully illustrates how a simple interaction rule gives rise to rich and familiar wave phenomena."
  },
  {
    "objectID": "vpython.html#balls-with-springs",
    "href": "vpython.html#balls-with-springs",
    "title": "Physics Simulations using VPython",
    "section": "Balls with springs",
    "text": "Balls with springs\n\nThis section explores simple mechanical systems involving masses connected to springs: simple classic setups that reveal surprisingly rich dynamics through basic principles.\nOn this simulation webpage two masses (represented by white spheres) are connected to three springs, with the outer ends of the springs anchored to fixed walls. The middle spring couples the motion of the two masses, so that when one oscillates, it influences the other.\nTo introduce an asymmetry, the mass on the left is made ten times heavier than the one on the right. This difference in mass leads to uneven oscillatory behavior. The simulation illustrates features of coupled harmonic systems, in a clear and intuitive way.\nIn another simulation, found here, a spring pendulum system is modeled, with a mass suspended from a fixed point by a spring, free to move in three dimensions.\nThe dynamics of the spring pendulum combine both vertical spring oscillations and horizontal pendulum-like swings, resulting in a rich, coupled motion. A thin red line traces the path of the mass over time, which helps to visualize its trajectory. This classic system beautifully illustrates the complexity that can arise from simple forces acting in more than one direction."
  },
  {
    "objectID": "vpython.html#rotating-disk-and-cube",
    "href": "vpython.html#rotating-disk-and-cube",
    "title": "Physics Simulations using VPython",
    "section": "Rotating disk and cube",
    "text": "Rotating disk and cube\n\nRotating a rigid object is straightforward when the rotation happens around one of its symmetry axes. In such cases, the angular momentum \\(\\vec{L}\\) vector points in the same direction as the angular velocity \\(\\vec{\\omega}\\). But what happens when the rotation is not aligned with a symmetry axis?\nIn general, a rigid body has different moments of inertia depending on the chosen axis of rotation. These moments are not necessarily the same in all directions. To capture this directional dependence, physicists use the moment of inertia tensor \\(I\\), which is a mathematical object (specifically, a \\(3\\times3\\) matrix) that encodes how the body’s mass is distributed in space with respect to all possible rotational axes.\nThe angular momentum \\(\\vec{L}\\) is related to the angular velocity \\(\\vec{\\omega}\\) through the inertia tensor \\(I\\) via: \\[ \\vec{L} = I \\,\\vec{\\omega}\\,,\\]\nIn the generic case both \\(\\vec{L}\\) and \\(\\vec{\\omega}\\) are vectors, and \\(I\\) is a tensor (that can be expressed as a matrix), meaning that \\(\\vec{L}\\) and \\(\\vec{\\omega}\\) might not be aligned.\nThis has interesting consequences: even in the absence of external forces or torques, the angular velocity vector may precess (change direction), while the angular momentum remains constant in inertial space. This motion is characteristic of objects rotating around axes that are not principal axes of inertia.\nTo visualize this, you can explore two examples of rigid body rotations in the following simulations:\n\na spinning disk\na spinning cube\n\nIn both cases, the blue arrow represents the conserved angular momentum vector, while the object rotates in such a way that its angular velocity is not aligned with it. This illustrates how the dynamics of rigid body rotations can be unintuitive beyond simple symmetric cases."
  },
  {
    "objectID": "solar-panels.html",
    "href": "solar-panels.html",
    "title": "How much energy can I save with solar panels?",
    "section": "",
    "text": "First published: August 6th 2025 Author: Pedro Cunha\nA friend of mine was considering installing solar panels on his roof, but was not sure how much electricity he could realistically save each year, and whether the investment would pay off. It is a common and practical question, yet getting a precise answer can be surprisingly tricky.\nWhile discussing it, I realised this was a great opportunity to approach a real-world problem from first principles to make meaningful predictions. This webpage is the result of that effort. It aims to be a transparent, technical, and pedagogical exploration of how much solar energy a rooftop can collect across the seasons, depending on location, weather, and orientation.\nThe goal is not just to estimate savings, but to show how such estimates can be made, using an open approach that anyone with a scientific background can follow, verify, and build upon.\n\\[\n\\]"
  },
  {
    "objectID": "solar-panels.html#orientation-of-the-roof",
    "href": "solar-panels.html#orientation-of-the-roof",
    "title": "How much energy can I save with solar panels?",
    "section": "Orientation of the roof",
    "text": "Orientation of the roof\nThe starting point is the layout and orientation of the roof, where the solar panels would be installed.\nBelow is a schematic drawing of my friend’s house, seen from the side (left panel) and from above (right panel).\n\nThe roof consists of two flat surfaces, which we will call Roof 1 and Roof 2. Each roof section is inclined relative to the horizontal ground at an angle \\(\\delta\\simeq 21^\\circ\\).\nThe orientation of the house relative to the cardinal directions is captured by the angle \\(\\gamma\\), which measures the deviation of the roof’s side from the North direction. This angle was measured using satellite images of the house. Both the North and West directions are represented by the unit vectors \\(\\hat{N}\\) and \\(\\hat{O}\\), respectively, where \\(\\hat{O}\\) is perpendicular to \\(\\hat{N}\\).\nSince \\(\\hat{N}\\) is a unit vector, its dot product with itself is one: \\(\\hat{N} \\cdot \\hat{N} = 1\\). The same holds for \\(\\hat{O}\\) and any other unit vector.\nTo fully describe the 3D orientation of the roofs, we also define a vertical unit vector \\(\\hat{n}\\), which is perpendicular to the ground and orthogonal to both \\(\\hat{N}\\) and \\(\\hat{O}\\). This forms a vector basis \\(\\{\\hat{N}, \\hat{O}, \\hat{n}\\}\\), which is useful for expressing any vector in the local coordinate system.\nEach roof surface also has its own unit normal vector:\n\nRoof 1 is associated with \\(\\hat{T}_1\\equiv \\hat{T}_+\\)\nRoof 2 is associated with \\(\\hat{T}_2\\equiv \\hat{T}_-\\)\n\nThese vectors point perpendicularly outward from the respective roof surfaces, and are illustrated in the diagram below.\n\nAfter some algebra, and using some basic vector decomposition, each normal vector \\(\\hat{T}_\\pm\\) can be written as a linear combination of the basis vectors\\(\\{\\hat{N},\\hat{O},\\hat{n}\\}\\):\n\\[ \\hat{T}_\\pm = (\\cos\\delta)\\, \\hat{n} \\,+\\,(\\mp \\sin\\delta\\sin\\gamma)\\,\\hat{N} \\,+\\, (\\pm\\sin\\delta\\cos\\gamma)\\,\\hat{O}\\,.\\]\nThis expression compactly encodes for each roof both the tilt angle \\(\\delta\\) and the orientation angle \\(\\gamma\\), and will be useful in calculating the amount of sunlight that strikes each surface over time.\nTo simplify the notation, we will omit the indices \\(\\{1,2\\}\\) or \\(\\{+,-\\}\\) and refer generically to the roof’s normal vector as \\(\\hat{T}\\)."
  },
  {
    "objectID": "solar-panels.html#energy-collected-on-the-roof",
    "href": "solar-panels.html#energy-collected-on-the-roof",
    "title": "How much energy can I save with solar panels?",
    "section": "Energy collected on the roof",
    "text": "Energy collected on the roof\nThe next step is to estimate the energy \\(E\\) collected by a solar panel installed on the roof.\nConsider a beam of sunlight arriving from the Sun, as illustrated in the figure below. \nThis beam transports an energy flux \\(\\varepsilon\\), defined as the energy \\(\\mathcal{E}\\) delivered per unit time \\(t\\) and per unit area \\(\\tilde{A}\\), measured perpendicularly to the beam’s direction:\n\\[ \\frac{d\\mathcal{E}}{dt\\,d\\tilde{A}}=\\varepsilon\\]\nHowever, the actual energy deposited on the roof depends on the angle between the incoming sunlight and the orientation of the roof surface. To account for this, we define a unit vector \\(\\hat{S}\\) pointing in the direction of the Sun.\nSince the solar panel lies flat on the roof, the relevant area for collecting sunlight is the projection of the beam’s cross-sectional area \\(d\\tilde{A}\\) onto the panel’s surface area \\(dA\\). This projection introduces a geometric correction given by the dot product between the roof’s unit normal vector \\(\\hat{T}\\) and the Sun’s direction \\(\\hat{S}\\):\n\\[ \\frac{d\\mathcal{E}}{dt\\,dA}=\\mu\\,\\varepsilon\\,\\hat{T}\\cdot \\hat{S}\\]\nWe have also introduced an additional factor \\(\\mu\\), which acts as a switch, ensuring energy is only collected when sunlight is physically able to reach the panel. It is defined as:\n\n\\(\\mu=0\\,\\,\\) if \\(\\,\\,\\hat{T}\\cdot\\hat{S}&lt;0\\,\\,\\); sunlight is hitting the underside of the roof, which is not exposed to the Sun;\n\\(\\mu=0\\,\\,\\) if \\(\\,\\,\\hat{n}\\cdot\\hat{S}&lt;0\\,\\,\\); the Sun is below the horizon and so it is night time;\n\\(\\mu=1\\) otherwise\\(\\,\\,\\); sunlight reaches the exposed surface of the roof.\n\nTo estimate the energy flux \\(\\varepsilon\\) reaching the solar panel, we start with the fact that the solar energy arriving just above the Earth’s atmosphere is approximately uniform across the planet. After accounting for atmospheric attenuation, a typical value near the surface on a clear day is \\(\\varepsilon_o\\simeq 1050 W/m^2\\).\nHowever, local weather conditions, such as clouds, haze, or fog, can reduce the amount of sunlight that actually reaches the ground. To incorporate this variability, we introduce a weather factor \\(\\zeta(t) \\in [0,1]\\), which represents the fraction of solar energy transmitted through the atmosphere at a given time \\(t\\). On a clear day, \\(\\zeta \\approx 1\\), while on a heavily cloudy day \\(\\zeta\\) can be much smaller. The effective energy flux at the surface then becomes \\(\\varepsilon= \\varepsilon_o\\,\\zeta\\).\nNext, we must account for the fact that solar panels do not convert all the incident energy into electricity. Their performance is quantified by a conversion efficiency \\(\\eta \\in [0,1]\\), defined by the ratio \\(E=\\eta\\,\\mathcal{E}\\), where \\(\\mathcal{E}\\) is the total incoming energy, and \\(E\\) is the portion actually converted into usable electric energy.\nFor typical commercial panels, the efficiency is around \\(\\eta \\approx 0.17\\), meaning about 17% of the incident energy is collected.\nPutting everything together, the total energy \\(E\\) collected by a solar panel of surface area \\(A\\) over the course of a day is given by: \\[ E = A\\,\\eta\\,\\varepsilon_o \\int_{\\textrm{day}} \\mu(t)\\,\\zeta(t)\\,\\hat{T}\\cdot\\hat{S}(t)\\,dt\\]\nThis expression accounts for:\n\nthe orientation of the panel, via \\(\\hat{T} \\cdot \\hat{S}(t)\\),\nthe position of the Sun throughout the day, as captured by the time dependence of \\(\\hat{S}(t)\\),\nthe weather conditions, via \\(\\zeta(t)\\),\nand the panel’s own conversion efficiency, \\(\\eta\\).\n\nThe factor \\(\\mu(t)\\), as defined earlier, ensures that energy is only collected when the Sun is above the horizon and illuminating the panel.\nIt remains to model both the weather factor \\(\\zeta(t)\\) and the Sun’s direction \\(\\hat{S}\\) throughout the year, for a given geographic location."
  },
  {
    "objectID": "solar-panels.html#motion-of-the-sun-in-the-sky",
    "href": "solar-panels.html#motion-of-the-sun-in-the-sky",
    "title": "How much energy can I save with solar panels?",
    "section": "Motion of the Sun in the sky",
    "text": "Motion of the Sun in the sky\nTo estimate how much sunlight reaches a solar panel at any given time, we need to understand how the Sun moves across the sky throughout the day and year. This motion can be modeled from first principles, starting with the Earth’s orbit around the Sun.\nAlthough the Earth orbits the Sun in an approximately circular path within a plane, known as the solar orbital plane. However, from an Earth-centered frame, the Sun seems to orbit with an angular velocity \\(\\Omega=2\\pi/year\\) (see image below).\n\nWe can begin by describing this apparent motion in a Cartesian coordinate system \\((X,Y,Z)\\) aligned with the solar orbital plane and centered at the Earth’s center. In this coordinate system, the Sun’s unit direction vector, denoted by \\(\\hat{S}'\\), evolves as: \\[\n\\hat{S}'=\\begin{pmatrix}\n\\,\\,\\,\\sin\\Omega\\,t\\\\\n-\\cos\\Omega\\,t\\\\\n0\n\\end{pmatrix}_{\\textrm{Solar plane coord.}}\n\\] where the prime indicates that \\(\\hat{S}'\\) is expressed in the solar orbital plane frame. The time \\(t=0\\) corresponds to the Perihelion, which approximately corresponds to January 2nd.\nTo express the Sun’s direction in the Earth-comoving frame, which is the one relevant for observers on the ground, we must apply two active rotations to \\(\\hat{S}'\\):\n\nAxial tilt: The Earth’s rotation axis is tilted by an angle \\(\\beta \\approx 23.44^\\circ\\) relative to the axis perpendicular to the solar plane. This is implemented via a rotation about the x-axis.\nDaily rotation: The Earth spins about its axis (the z-axis in our frame) with angular velocity \\(\\omega = 2\\pi/\\text{day}\\), leading to the daily motion of the Sun across the sky, and also to the day-night cycle. This is a rotation about the z-axis.\n\nCombining these two transformations gives the Sun’s direction vector \\(\\hat{S}(t)\\) in the Earth-comoving frame: \\[ \\hat{S} = \\mathcal{R}_z(-\\omega t)\\,\\,\\mathcal{R}_x(\\beta)\\,\\,\\hat{S}'\\,\\]\nwhere \\(\\mathcal{R}_x(\\theta)\\) and \\(\\mathcal{R}_z(\\theta)\\) are standard 3D rotation matrices:\n\\[\n\\mathcal{R}_x(\\theta)=\\begin{pmatrix}\n1 & 0  & 0\\\\\n0 & \\cos\\theta  & -\\sin\\theta\\\\\n0 & \\sin\\theta  & \\,\\,\\cos\\theta\n\\end{pmatrix}\n\\qquad\\qquad\n\\mathcal{R}_z(\\theta)=\\begin{pmatrix}\n\\cos\\theta  & -\\sin\\theta & 0\\\\\n\\sin\\theta  & \\,\\,\\cos\\theta & 0\\\\\n0 & 0  & 1\n\\end{pmatrix}\n\\]\nTo connect the Sun’s position to a specific location on Earth, such as a solar panel installation, we need to obtain the local directional vectors at that location. Consider the image below, which shows a representation of Earth’s comoving frame, and a pink point on the surface with latitude \\(\\alpha\\), which is the house’s location. Since my friend’s house is located in the city of Coimbra, we shall consider \\(\\alpha\\simeq 40.21^\\circ\\).\n\nThe North and vertical vectors at the house location can then be obtained in this frame:\n\nThe North direction \\(\\hat{N}\\) is obtained by rotating the vertical axis \\(\\hat{z}\\) (which points along the Earth’s spin axis) by the latitude angle \\(\\alpha\\): \\[\\hat{N}= \\mathcal{R}_x(\\alpha)\\,\\hat{z}=\\mathcal{R}_x(\\alpha)\\,\n\\begin{pmatrix}\n0\\\\\n0\\\\\n1\n\\end{pmatrix}\\]\nThe local vertical direction \\(\\hat{n}\\) (normal to the ground) is similarly given by rotating the \\(y\\)-axis: \\[\\hat{n}= \\mathcal{R}_x(\\alpha)\\,\\hat{y}=\\mathcal{R}_x(\\alpha)\\,\n\\begin{pmatrix}\n0\\\\\n1\\\\\n0\n\\end{pmatrix}\\]\nThe West direction \\(\\hat{O}\\) is perpendicular to both \\(\\hat{n}\\) and \\(\\hat{N}\\) and is given by the cross product \\(\\hat{O}= \\hat{n}\\times \\hat{N}\\).\n\nThese three vectors \\(\\{\\hat{N}, \\hat{O}, \\hat{n}\\}\\) define a local basis at the observation point, and allow us to compute all relevant dot products with the Sun vector \\(\\hat{S}\\), such as those used in solar energy calculations.\nWe now have a complete model of the Sun’s apparent motion in the sky as a function of time \\(t\\), from the perspective of a fixed observer located in the city of Coimbra. The figure below shows the Sun’s trajectory across the local sky throughout the year, above the horizon."
  },
  {
    "objectID": "solar-panels.html#modeling-the-weather-factor-zeta",
    "href": "solar-panels.html#modeling-the-weather-factor-zeta",
    "title": "How much energy can I save with solar panels?",
    "section": "Modeling the weather factor \\(\\zeta\\)",
    "text": "Modeling the weather factor \\(\\zeta\\)\nThe next step is to model the weather factor \\(\\zeta(t)\\), which is a time-dependent function that accounts for the reduction in solar radiation flux due to atmospheric absorption and scattering, such as from clouds, haze, or fog.\nAccurately modeling \\(\\zeta\\) is a challenging task, as it depends on complex, location-specific meteorological dynamics. However, we can still obtain a reasonable approximation using historical weather data.\nThe website Weather Spark provides detailed climate statistics for the city of Coimbra, including the probability of cloud cover throughout the year. Using this data, I have constructed the following plot to represent an effective approximation of the weather factor over the course of the year:\n\nThe plot is divided into five distinct regions, each corresponding to a different degree of cloudiness. The width of each region at a given point in the year reflects the probability of that type of weather occurring on any given day.\nFor example, in January, the likelihood of having a very cloudy sky is high, which is why regions I and II (representing heavy cloud cover) dominate. In contrast, during August, the probability of clear skies is much greater, which is reflected by the large area occupied by region V.\nFor each of the five weather regions (I to V), we assign an effective weather factor \\(\\zeta\\), which quantifies the fraction of solar energy that reaches the Earth’s surface. These values range from 1.0 (100%) for clear skies to 0.0 (0%) for very thick and heavily clouded skies. While this approach is very simplified, it provides a reasonable approximation for our purposes.\nIn practice, the value of \\(\\zeta\\) at any given time \\(t\\) is determined stochastically: a region (I–V) is selected at random, with probability weights based on the seasonal cloud cover distribution shown in the previous plot. Once chosen, the corresponding \\(\\zeta\\) value is held constant over a 4-hour interval, reflecting the typical timescale over which local weather conditions remain stable. After each time interval, the process is repeated to update the value of \\(\\zeta\\)."
  },
  {
    "objectID": "solar-panels.html#simulating-energy-collection",
    "href": "solar-panels.html#simulating-energy-collection",
    "title": "How much energy can I save with solar panels?",
    "section": "Simulating Energy collection",
    "text": "Simulating Energy collection\nNow that we have the full setup, we can begin estimating how much solar energy each section of the roof can collect on a daily basis over the course of a typical year.\nIn the plot below, the pink curve shows the daily energy (in kWh) collected by one square meter of solar panel installed on Roof 1. This curve incorporates stochastic weather variations, based on the probabilistic model discussed earlier.\n\nFor comparison, the green curve represents a smoothed estimate, computed using an effective average weather factor \\(\\zeta\\). This average is obtained by weighting the typical values of \\(\\zeta\\) for each weather category (Regions I–V) according to their probability at a given time of year. As expected, this curve is much smoother and reflects the mean trend of solar energy collection.\nHowever, the pink curve exhibits significant fluctuations, which can have a substantial impact on the total energy accumulated over the year, and hence on the estimated energy savings. This highlights an important point:\n\nRelying solely on an average-weather model can significantly misrepresent the actual yearly savings, as it fails to account for the variability inherent in solar energy production.\n\nNonetheless, the average-weather model remains useful to identify general trends. In particular, it reveals that Roof 1 consistently collects more solar energy than Roof 2, on average. This can be seen in the next plot, which shows the daily energy collected by each roof, assuming the effective average weather factor \\(\\zeta\\).\n\nAlthough this model smooths out short-term fluctuations, it provides a clear comparison between the two roof orientations and their overall performance in solar energy generation throughout the year."
  },
  {
    "objectID": "solar-panels.html#energy-savings",
    "href": "solar-panels.html#energy-savings",
    "title": "How much energy can I save with solar panels?",
    "section": "Energy savings",
    "text": "Energy savings\nBased on the previous simulations, roof 1 alone is expected to collect approximately 224 kWh per square meter over the course of a year. At a market electricity price of €0.17/kWh (VAT included), this translates to an estimated €38 of annual savings per square meter.\nSolar panels are typically sold as units. Assuming each panel covers 1.6 m\\(^2\\), installing 8 panels would correspond to about €487 in yearly energy savings, under ideal conditions where all the collected energy is consumed.\nHowever, in practice, not all the solar energy produced is used. The actual savings depend on the household’s daily consumption pattern. If energy is produced at a time when it is not being consumed, and if there is no way to store it, then it gets wasted.\nUsing real electricity consumption data from the household in question, I have performed a more detailed analysis and found that, on average, around 33% of the energy collected would go unused due to this mismatch. Taking that into account, the effective annual savings drop to about €327 for 8 panels, which is still pretty good.\nGiven an installation cost of approximately €3 500, this leads to a payback time of about 10 years.\nConsidering that modern solar panels have a useful lifespan of around 26 years, this still results in over €5 000 of savings across the solar panels lifetime, which is a solid long-term investment."
  },
  {
    "objectID": "solar-panels.html#a-note-on-battery-storage",
    "href": "solar-panels.html#a-note-on-battery-storage",
    "title": "How much energy can I save with solar panels?",
    "section": "A Note on Battery Storage",
    "text": "A Note on Battery Storage\nI also carried out an additional analysis to explore how these numbers would change when a battery storage system is included. A battery allows surplus solar energy to be stored and used later, potentially reducing losses.\nHowever, this improvement comes with trade-offs, since batteries have:\n\nlimited storage capacity,\nfinite charge/discharge rates,\nand, most importantly, fairly high installation costs.\n\nFor the specific case analysed, the added savings from the battery system did not justify its cost, given current market prices. The overall system remained more cost-effective without it.\nTo keep this webpage accessible and focused, I have chosen not to include the full technical details of the battery modeling and household energy usage analysis. However, if you are interested in a further details, whether you are from academia, the energy sector, or simply curious, feel free to get in touch. I would be happy to discuss the methodology further."
  }
]